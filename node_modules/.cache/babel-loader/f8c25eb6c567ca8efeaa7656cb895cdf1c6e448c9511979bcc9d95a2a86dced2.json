{"ast":null,"code":"var _jsxFileName = \"/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pans = {\n  rectangular: [{\n    length: 8,\n    width: 8,\n    height: 2\n  }, {\n    length: 9,\n    width: 9,\n    height: 2\n  }, {\n    length: 10,\n    width: 10,\n    height: 2\n  }, {\n    length: 11,\n    width: 7,\n    height: 2\n  }, {\n    length: 13,\n    width: 9,\n    height: 2\n  }],\n  round: [{\n    diameter: 6,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }],\n  springform: [{\n    diameter: 9,\n    height: 2.5\n  }, {\n    diameter: 10,\n    height: 2.5\n  }],\n  bundt: [{\n    diameter: 10,\n    height: 3\n  }],\n  tube: [{\n    diameter: 9,\n    height: 3\n  }],\n  loaf: [{\n    length: 8,\n    width: 4,\n    height: 3\n  }, {\n    length: 9,\n    width: 5,\n    height: 3\n  }]\n};\nfunction dimensionOptions(type) {\n  if (type === 'rectangular' || type === 'loaf') {\n    return pans[type].map(({\n      length,\n      width,\n      height\n    }, index) => ({\n      id: `${type}-${index}`,\n      // Generate a unique identifier\n      label: `${length} x ${width} x ${height}`\n    }));\n  } else {\n    return pans[type].map(({\n      diameter,\n      height\n    }, index) => ({\n      id: `${type}-${index}`,\n      // Generate a unique identifier\n      label: `${diameter} x ${height}`\n    }));\n  }\n}\nexport default function PanSizer() {\n  _s();\n  const [fromShape, setFromShape] = useState('rectangular');\n  const [selectedDimension, setSelectedDimension] = useState(null);\n  const originalDimensions = dimensionOptions(fromShape);\n  function handleShapeChange(event) {\n    const shapeType = event.target.value;\n    setFromShape(shapeType);\n  }\n  function handleDimensionChange(event) {\n    const selectedId = event.target.value;\n    const dimension = getDimensionById(selectedId);\n    setSelectedDimension(dimension);\n  }\n  function getDimensionById(id) {\n    const [type, index] = id.split('-');\n    const dimension = pans[type][index];\n    return dimension;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Pan Sizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"basic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shape: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-from\",\n          name: \"shape-from\",\n          value: fromShape,\n          onChange: handleShapeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rectangular\",\n            children: \"Rectangular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"round\",\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"springform\",\n            children: \"Springform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"loaf\",\n            children: \"Loaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bundt\",\n            children: \"Bundt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tube\",\n            children: \"Tube\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dimensions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-original-dimensions\",\n          name: \"shape-original-dimensions\",\n          value: selectedDimension ? selectedDimension.id : '',\n          onChange: handleDimensionChange,\n          children: originalDimensions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.label\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Equivalent To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), selectedDimension && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Object.entries(selectedDimension).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [key, \": \", value, \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(PanSizer, \"rUf1aYdbgH6SWVWjtdgaztg4LP8=\");\n_c = PanSizer;\nvar _c;\n$RefreshReg$(_c, \"PanSizer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","pans","rectangular","length","width","height","round","diameter","springform","bundt","tube","loaf","dimensionOptions","type","map","index","id","label","PanSizer","_s","fromShape","setFromShape","selectedDimension","setSelectedDimension","originalDimensions","handleShapeChange","event","shapeType","target","value","handleDimensionChange","selectedId","dimension","getDimensionById","split","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","option","Object","entries","key","_c","$RefreshReg$"],"sources":["/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst pans = {\n    rectangular: [\n        { length: 8, width: 8, height: 2 },\n        { length: 9, width: 9, height: 2 },\n        { length: 10, width: 10, height: 2 },\n        { length: 11, width: 7, height: 2 },\n        { length: 13, width: 9, height: 2 }\n    ],\n    round: [\n        { diameter: 6, height: 2 },\n        { diameter: 9, height: 2 },\n        { diameter: 9, height: 2 }\n    ],\n    springform: [\n        { diameter: 9, height: 2.5 },\n        { diameter: 10, height: 2.5 }\n    ],\n    bundt: [\n        { diameter: 10, height: 3 }\n    ],\n    tube: [\n        { diameter: 9, height: 3 }\n    ],\n    loaf: [\n        { length: 8, width: 4, height: 3 },\n        { length: 9, width: 5, height: 3 }\n    ],\n};\n\nfunction dimensionOptions(type) {\n    if (type === 'rectangular' || type === 'loaf') {\n        return pans[type].map(({ length, width, height }, index) => ({\n            id: `${type}-${index}`, // Generate a unique identifier\n            label: `${length} x ${width} x ${height}`\n        }));           \n    } else {\n        return pans[type].map(({ diameter, height }, index) => ({\n            id: `${type}-${index}`, // Generate a unique identifier\n            label: `${diameter} x ${height}`\n        }));  \n    }\n}\n\nexport default function PanSizer() {\n    const [fromShape, setFromShape] = useState('rectangular');\n    const [selectedDimension, setSelectedDimension] = useState(null);\n    const originalDimensions = dimensionOptions(fromShape);\n\n    function handleShapeChange(event) {\n        const shapeType = event.target.value;\n        setFromShape(shapeType);\n    }\n\n    function handleDimensionChange(event) {\n        const selectedId = event.target.value;\n        const dimension = getDimensionById(selectedId);\n        setSelectedDimension(dimension);\n    }\n\n    function getDimensionById(id) {\n        const [type, index] = id.split('-');\n        const dimension = pans[type][index];\n        return dimension;\n    }\n\n    return (\n        <section>\n            <h2 className=\"form-title\">Pan Sizer</h2>\n            <form className=\"basic-form\">\n                <p>\n                    <label>Shape: </label>\n                    <select id=\"shape-from\" name=\"shape-from\" value={fromShape} onChange={handleShapeChange}>\n                        <option value=\"rectangular\">Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                    </select>\n                </p>\n\n                <p>\n                    <label>Dimensions: </label>\n                    <select id=\"shape-original-dimensions\" name=\"shape-original-dimensions\" value={selectedDimension ? selectedDimension.id : ''} onChange={handleDimensionChange}>\n                        {originalDimensions.map(option => (\n                            <option key={option.id} value={option.id}>{option.label}</option>\n                        ))}\n                    </select>\n                </p>\n\n                <div className=\"result\">\n                    <h3>Equivalent To:</h3>\n                    {selectedDimension && (\n                        <p>\n                            {Object.entries(selectedDimension).map(([key, value]) => (\n                                <span key={key}>{key}: {value} </span>\n                            ))}\n                        </p>\n                    )}\n                </div>\n            </form>\n        </section>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}