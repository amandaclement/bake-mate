{"ast":null,"code":"var _jsxFileName = \"/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n// Standard pan shapes and their dimensions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pans = {\n  rectangular: [{\n    length: 8,\n    width: 8,\n    height: 2\n  }, {\n    length: 9,\n    width: 9,\n    height: 2\n  }, {\n    length: 10,\n    width: 10,\n    height: 2\n  }, {\n    length: 11,\n    width: 7,\n    height: 2\n  }, {\n    length: 13,\n    width: 9,\n    height: 2\n  }],\n  round: [{\n    diameter: 6,\n    height: 2\n  }, {\n    diameter: 8,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }, {\n    diameter: 10,\n    height: 2\n  }],\n  springform: [{\n    diameter: 8,\n    height: 3\n  }, {\n    diameter: 9,\n    height: 3\n  }],\n  bundt: [{\n    diameter: 8,\n    height: 4\n  }, {\n    diameter: 10,\n    height: 3\n  }],\n  tube: [{\n    diameter: 8,\n    height: 3\n  }, {\n    diameter: 9,\n    height: 3\n  }],\n  loaf: [{\n    length: 8,\n    width: 4,\n    height: 2.5\n  }, {\n    length: 9,\n    width: 5,\n    height: 2.5\n  }]\n};\nconst maxVolumeDifference = 0.1;\n\n// Converts cubic inches to litres\nfunction cubicInchesToLitres(x) {\n  return x * 0.0163871;\n}\n\n// Calculates volume of a cylinder without unit conversion\nfunction cylinderVolume(diameter, height) {\n  return diameter / 2 * (diameter / 2) * height * Math.PI;\n}\n\n// Calculates volume of a cuboid with unit conversion\nfunction calculateCuboidVolume({\n  length,\n  width,\n  height\n}) {\n  return cubicInchesToLitres(length * width * height);\n}\n\n// Calculates volume of a cylinder with unit conversion\nfunction calculateCylinderVolume({\n  diameter,\n  height\n}) {\n  return cubicInchesToLitres(cylinderVolume(diameter, height));\n}\n\n// Calculates volume of a cylinder with a hole in the middle with unit conversion\n// Scaler is used in a very rudimentary way to account for loss of volume due to angled base of bundt cakes\nfunction calculateHollowCylinderVolume({\n  diameter,\n  height\n}, scaler) {\n  const outerVolume = cylinderVolume(diameter, height);\n  const innerDiameter = diameter / 10;\n  const innerVolume = cylinderVolume(innerDiameter, height);\n  return cubicInchesToLitres(outerVolume * scaler - innerVolume);\n}\n\n// Calculates volume of pan based on type and dimensions\nfunction calculateVolume(type, dimensions) {\n  if (type === 'rectangular' || type === 'loaf') {\n    return calculateCuboidVolume(dimensions);\n  } else if (type === 'round' || type === 'springform') {\n    return calculateCylinderVolume(dimensions);\n  } else if (type === 'tube') {\n    return calculateHollowCylinderVolume(dimensions, 1);\n  } else if (type === 'bundt') {\n    return calculateHollowCylinderVolume(dimensions, 0.7);\n  }\n}\n\n// Generates dimension options for specific pan type\nfunction generateLabel(type, dimensions) {\n  if (type === 'rectangular' || type === 'loaf') {\n    const {\n      length,\n      width,\n      height\n    } = dimensions;\n    return `${length} x ${width} x ${height}`;\n  } else {\n    const {\n      diameter,\n      height\n    } = dimensions;\n    return `${diameter} x ${height}`;\n  }\n}\n\n// Updates each dimension with its corresponding volume and label\nfunction updateDimensions() {\n  for (const type in pans) {\n    pans[type].forEach(dimensions => {\n      dimensions.volume = calculateVolume(type, dimensions);\n      dimensions.label = generateLabel(type, dimensions);\n    });\n  }\n}\nupdateDimensions();\n\n// React component for Pan Sizer\nexport default function PanSizer() {\n  _s();\n  // State variable for selected shape\n  const [shape, setShape] = useState('rectangular');\n  const [currentDimensions, setCurrentDimensions] = useState(pans['rectangular'][0]);\n\n  // State variable for index of selected dimensions\n  const [selectedDimensionsIndex, setSelectedDimensionsIndex] = useState(0);\n\n  // State variable to manage custom dimensions section\n  const [isCustomDimensions, setIsCustomDimensions] = useState(false);\n\n  // State variable to manage when to show matches\n  const [isDisplayMatches, setIsDisplayMatches] = useState(false);\n  const [volume, setVolume] = useState(0);\n\n  // Event handler for shape change\n  function handleShapeChange(event) {\n    const type = event.target.value;\n    setShape(type);\n    setIsDisplayMatches(false);\n\n    // Reset selected dimension to the first one\n    // setSelectedDimensionsIndex(0);\n\n    setCurrentDimensions(pans[type][0]);\n\n    // Hide custom dimensions section\n    setIsCustomDimensions(false);\n  }\n\n  // Event handler for dimension change\n  function handleDimensionChange(event) {\n    const selectedIndex = event.target.value;\n    setSelectedDimensionsIndex(selectedIndex);\n    setIsDisplayMatches(false);\n\n    // setCurrentDimensions(pans[shape][selectedIndex]);\n\n    // If selected dimension is custom, set bool to true to allow user to enter their own dimensions\n    // setIsCustomDimensions(selectedIndex === 'custom');\n\n    if (selectedIndex === 'custom') {\n      setIsCustomDimensions(true);\n      setIsDisplayMatches(false);\n    } else {\n      setIsCustomDimensions(false);\n      setCurrentDimensions(pans[shape][selectedIndex]);\n    }\n  }\n  function handleCustomDimensionChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentDimensions({\n      ...currentDimensions,\n      [name]: value\n    });\n  }\n  function handleEnter(event) {\n    // Prevent page reload on button click\n    event.preventDefault();\n    setVolume(calculateVolume(shape, currentDimensions));\n    setIsDisplayMatches(true);\n  }\n\n  // Returns an array of acceptable pan conversions, formatted as [pan type, pan dimension string]\n  function findMatches() {\n    var matches = [];\n    for (const type in pans) {\n      if (type !== shape) {\n        pans[type].forEach(pan => {\n          if (Math.abs(pan.volume - volume) < maxVolumeDifference) {\n            matches.push([type, pan.label]);\n          }\n        });\n      }\n    }\n    return matches;\n  }\n\n  // Renders the matches array in list form\n  function renderMatches() {\n    const matches = findMatches();\n    if (matches.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No substitutions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Can be substituted with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: matches.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item[0], \": \", item[1]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"tool\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Pan Sizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"basic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shape: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape\",\n          name: \"shape\",\n          value: shape,\n          onChange: handleShapeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rectangular\",\n            children: \"Rectangular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"round\",\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"springform\",\n            children: \"Springform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bundt\",\n            children: \"Bundt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tube\",\n            children: \"Tube\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"loaf\",\n            children: \"Loaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dimensions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-dimensions\",\n          name: \"shape-dimensions\",\n          value: selectedDimensionsIndex,\n          onChange: handleDimensionChange,\n          children: [pans[shape].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: option.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"Custom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), isCustomDimensions && (shape === 'rectangular' || shape == 'loaf') && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"length\",\n          placeholder: \"Length\",\n          required: true,\n          value: currentDimensions.length,\n          onChange: handleCustomDimensionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), \" x\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"width\",\n          placeholder: \"Width\",\n          required: true,\n          value: currentDimensions.width,\n          onChange: handleCustomDimensionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), \" x\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\",\n          placeholder: \"Height\",\n          required: true,\n          value: currentDimensions.height,\n          onChange: handleCustomDimensionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this), isCustomDimensions && !(shape === 'rectangular' || shape == 'loaf') && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"diameter\",\n          placeholder: \"Diameter\",\n          required: true,\n          value: currentDimensions.diameter,\n          onChange: handleCustomDimensionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), \" x\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\",\n          placeholder: \"Height\",\n          required: true,\n          value: currentDimensions.height,\n          onChange: handleCustomDimensionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnter,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), isDisplayMatches && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderMatches()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n}\n_s(PanSizer, \"m+bCOgVxCsbznuT7a2soNRn5pMM=\");\n_c = PanSizer;\nvar _c;\n$RefreshReg$(_c, \"PanSizer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","pans","rectangular","length","width","height","round","diameter","springform","bundt","tube","loaf","maxVolumeDifference","cubicInchesToLitres","x","cylinderVolume","Math","PI","calculateCuboidVolume","calculateCylinderVolume","calculateHollowCylinderVolume","scaler","outerVolume","innerDiameter","innerVolume","calculateVolume","type","dimensions","generateLabel","updateDimensions","forEach","volume","label","PanSizer","_s","shape","setShape","currentDimensions","setCurrentDimensions","selectedDimensionsIndex","setSelectedDimensionsIndex","isCustomDimensions","setIsCustomDimensions","isDisplayMatches","setIsDisplayMatches","setVolume","handleShapeChange","event","target","value","handleDimensionChange","selectedIndex","handleCustomDimensionChange","name","handleEnter","preventDefault","findMatches","matches","pan","abs","push","renderMatches","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","className","id","onChange","option","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx"],"sourcesContent":["import { useState } from 'react';\n\n// Standard pan shapes and their dimensions\nconst pans = {\n    rectangular: [\n        { length: 8, width: 8, height: 2 },\n        { length: 9, width: 9, height: 2  },\n        { length: 10, width: 10, height: 2 },\n        { length: 11, width: 7, height: 2 },\n        { length: 13, width: 9, height: 2 }\n    ],\n    round: [\n        { diameter: 6, height: 2 },\n        { diameter: 8, height: 2 },\n        { diameter: 9, height: 2 },\n        { diameter: 10, height: 2 }\n    ],\n    springform: [\n        { diameter: 8, height: 3 },\n        { diameter: 9, height: 3 }\n    ],\n    bundt: [\n        { diameter: 8, height: 4 },\n        { diameter: 10, height: 3 }\n    ],\n    tube: [\n        { diameter: 8, height: 3 },\n        { diameter: 9, height: 3 }\n    ],\n    loaf: [\n        { length: 8, width: 4, height: 2.5 },\n        { length: 9, width: 5, height: 2.5 }\n    ],\n};\n\nconst maxVolumeDifference = 0.1;\n\n// Converts cubic inches to litres\nfunction cubicInchesToLitres(x) {\n    return x * 0.0163871;\n}\n\n// Calculates volume of a cylinder without unit conversion\nfunction cylinderVolume(diameter, height) {\n    return (diameter/2) * (diameter/2) * height * Math.PI;\n}\n\n// Calculates volume of a cuboid with unit conversion\nfunction calculateCuboidVolume({ length, width, height }) {\n    return cubicInchesToLitres(length * width * height);\n}\n\n// Calculates volume of a cylinder with unit conversion\nfunction calculateCylinderVolume({ diameter, height }) {\n    return cubicInchesToLitres(cylinderVolume(diameter, height));\n}\n\n// Calculates volume of a cylinder with a hole in the middle with unit conversion\n// Scaler is used in a very rudimentary way to account for loss of volume due to angled base of bundt cakes\nfunction calculateHollowCylinderVolume({ diameter, height }, scaler) {\n    const outerVolume = cylinderVolume(diameter, height);\n    const innerDiameter = diameter/10;\n    const innerVolume = cylinderVolume(innerDiameter, height);\n    return cubicInchesToLitres(outerVolume * scaler - innerVolume);\n}\n\n// Calculates volume of pan based on type and dimensions\nfunction calculateVolume(type, dimensions) {\n    if (type === 'rectangular' || type === 'loaf') {\n        return calculateCuboidVolume(dimensions); \n    } else if (type === 'round' || type === 'springform') {\n        return calculateCylinderVolume(dimensions); \n    } else if (type === 'tube') {\n        return calculateHollowCylinderVolume(dimensions, 1); \n    } else if (type === 'bundt') {\n        return calculateHollowCylinderVolume(dimensions, 0.7); \n    }\n}\n\n// Generates dimension options for specific pan type\nfunction generateLabel(type, dimensions) {\n    if (type === 'rectangular' || type === 'loaf') {\n        const { length, width, height } = dimensions;\n        return `${length} x ${width} x ${height}`;\n    } else {\n        const { diameter, height } = dimensions;\n        return `${diameter} x ${height}`;\n    }\n}\n\n// Updates each dimension with its corresponding volume and label\nfunction updateDimensions() {\n    for (const type in pans) {\n        pans[type].forEach(dimensions => {\n            dimensions.volume = calculateVolume(type, dimensions);\n            dimensions.label = generateLabel(type, dimensions);\n        });\n    }\n}\nupdateDimensions();\n\n// React component for Pan Sizer\nexport default function PanSizer() {\n\n    // State variable for selected shape\n    const [shape, setShape] = useState('rectangular');\n\n    const [currentDimensions, setCurrentDimensions] = useState(pans['rectangular'][0]);\n    \n    // State variable for index of selected dimensions\n    const [selectedDimensionsIndex, setSelectedDimensionsIndex] = useState(0);\n\n    // State variable to manage custom dimensions section\n    const [isCustomDimensions, setIsCustomDimensions] = useState(false);\n\n    // State variable to manage when to show matches\n    const [isDisplayMatches, setIsDisplayMatches] = useState(false);\n\n    const [volume, setVolume] = useState(0);\n\n    // Event handler for shape change\n    function handleShapeChange(event) {\n        const type = event.target.value;\n        setShape(type);\n\n        setIsDisplayMatches(false);\n\n        // Reset selected dimension to the first one\n        // setSelectedDimensionsIndex(0);\n        \n        setCurrentDimensions(pans[type][0]);\n\n        // Hide custom dimensions section\n        setIsCustomDimensions(false);\n    }\n\n    // Event handler for dimension change\n    function handleDimensionChange(event) {\n        const selectedIndex = event.target.value;\n        setSelectedDimensionsIndex(selectedIndex);\n\n        setIsDisplayMatches(false);\n\n        // setCurrentDimensions(pans[shape][selectedIndex]);\n\n        // If selected dimension is custom, set bool to true to allow user to enter their own dimensions\n        // setIsCustomDimensions(selectedIndex === 'custom');\n\n        if (selectedIndex === 'custom') {\n            setIsCustomDimensions(true);\n            setIsDisplayMatches(false);\n        } else {\n            setIsCustomDimensions(false);\n            setCurrentDimensions(pans[shape][selectedIndex]);\n        }\n    }\n\n    function handleCustomDimensionChange(event) {\n        const {name, value} = event.target;\n        setCurrentDimensions({\n            ...currentDimensions,\n            [name]: value\n          });\n    }\n\n    function handleEnter(event) {\n        // Prevent page reload on button click\n        event.preventDefault(); \n        setVolume(calculateVolume(shape, currentDimensions));\n\n        setIsDisplayMatches(true);\n    }\n\n    // Returns an array of acceptable pan conversions, formatted as [pan type, pan dimension string]\n    function findMatches() {\n        var matches = [];\n        for (const type in pans) {\n            if (type !== shape) {\n                pans[type].forEach(pan => {\n                    if (Math.abs(pan.volume - volume) < maxVolumeDifference) {\n                        matches.push([type, pan.label]);\n                    }\n                });\n            }\n        } \n        return matches;  \n    }\n\n    // Renders the matches array in list form\n    function renderMatches() {\n        const matches = findMatches();\n        if (matches.length === 0) {\n            return <p>No substitutions found.</p>;\n        }\n        return (\n            <div>\n                <h3>Can be substituted with</h3>\n                <ul>\n                    {matches.map((item, index) => (\n                        <li key={index}>{item[0]}: {item[1]}</li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n\n    // Render the component\n    return (\n        <section className=\"tool\">\n            <h2 className=\"form-title\">Pan Sizer</h2>\n            <form className=\"basic-form\">\n                <p>\n                    <label>Shape: </label>\n                    <select \n                        id=\"shape\" \n                        name=\"shape\" \n                        value={shape} \n                        onChange={handleShapeChange}\n                    >\n                        <option value=\"rectangular\">Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                        <option value=\"loaf\">Loaf</option>\n                    </select>\n                </p>\n\n                <p>\n                    <label>Dimensions: </label>\n                    <select\n                        id=\"shape-dimensions\"\n                        name=\"shape-dimensions\"\n                        value={selectedDimensionsIndex}\n                        onChange={handleDimensionChange}\n                    >  \n\n                    {/* Unless custom diemnsion ption chosen, map over dimension options to display in dropdown */}\n                    {pans[shape].map((option, index) => (\n                        <option key={index} value={index}>\n                            {option.label}\n                        </option>\n                    ))}\n                    <option value=\"custom\">Custom</option>\n                    </select>\n                </p>\n                \n                {/* Displayed only if user chooses to enter custom dimensions */}\n                {isCustomDimensions && (shape === 'rectangular' || shape == 'loaf') && (\n                    <p>\n                        <input type=\"number\" name=\"length\" placeholder=\"Length\" required value={currentDimensions.length} onChange={handleCustomDimensionChange} /> x&nbsp;\n                        <input type=\"number\" name=\"width\" placeholder=\"Width\" required value={currentDimensions.width} onChange={handleCustomDimensionChange} /> x&nbsp;\n                        <input type=\"number\" name=\"height\" placeholder=\"Height\" required value={currentDimensions.height} onChange={handleCustomDimensionChange} />\n                    </p>\n                )}\n                {isCustomDimensions && !(shape === 'rectangular' || shape == 'loaf') && (\n                    <p>\n                        <input type=\"number\" name=\"diameter\" placeholder=\"Diameter\" required value={currentDimensions.diameter} onChange={handleCustomDimensionChange} /> x&nbsp;\n                        <input type=\"number\" name=\"height\" placeholder=\"Height\" required value={currentDimensions.height} onChange={handleCustomDimensionChange} />\n                    </p>\n                )}\n\n                <button onClick={handleEnter}>Enter</button>\n\n\n                {isDisplayMatches && \n                    <div>{renderMatches()}</div>\n                }\n            </form>\n        </section>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}