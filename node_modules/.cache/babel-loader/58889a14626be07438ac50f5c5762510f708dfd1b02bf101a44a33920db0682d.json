{"ast":null,"code":"var _jsxFileName = \"/Users/AmandaClement/Desktop/React/packing-app/src/components/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherComponent() {\n  _s();\n  // Variable to hold weather data\n  const [weatherData, setWeatherData] = useState(null);\n\n  // Use useEffect hook to fetch weather data when component mounts\n  useEffect(() => {\n    // Async function to fetch weather data\n    const fetchData = async () => {\n      try {\n        // Make a GET request to the weather API\n        const response = await fetch('https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m');\n\n        // Parse response body as JSON\n        const data = await response.json();\n\n        // Update weatherData state variable with fetched data\n        setWeatherData(data);\n      } catch (error) {\n        // Handle errors if the fetch request fails\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    // Call fetchData function when the component mounts\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hourly Temperature Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: weatherData.hourly.temperature_2m.map((temp, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [temp, \"\\xB0C\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherComponent, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherComponent;\n;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeatherComponent","_s","weatherData","setWeatherData","fetchData","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","hourly","temperature_2m","map","temp","index","_c","$RefreshReg$"],"sources":["/Users/AmandaClement/Desktop/React/packing-app/src/components/Weather.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function WeatherComponent() {\n    // Variable to hold weather data\n    const [weatherData, setWeatherData] = useState(null);\n\n    // Use useEffect hook to fetch weather data when component mounts\n    useEffect(() => {\n        // Async function to fetch weather data\n        const fetchData = async () => {\n        try {\n            // Make a GET request to the weather API\n            const response = await fetch('https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m');\n\n            // Parse response body as JSON\n            const data = await response.json();\n\n            // Update weatherData state variable with fetched data\n            setWeatherData(data);\n        } catch (error) {\n            // Handle errors if the fetch request fails\n            console.error('Error fetching weather data:', error);\n        }\n        };\n\n        // Call fetchData function when the component mounts\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n        {weatherData && (\n            <div>\n            <h2>Hourly Temperature Forecast</h2>\n            <ul>\n                {weatherData.hourly.temperature_2m.map((temp, index) => (\n                <li key={index}>{temp}Â°C</li>\n                ))}\n            </ul>\n            </div>\n        )}\n        </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACvC;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6FAA6F,CAAC;;QAE3H;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACAL,cAAc,CAACI,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZ;QACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACA,CAAC;;IAED;IACAL,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAY,QAAA,EACCT,WAAW,iBACRH,OAAA;MAAAY,QAAA,gBACAZ,OAAA;QAAAY,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpChB,OAAA;QAAAY,QAAA,EACKT,WAAW,CAACc,MAAM,CAACC,cAAc,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnDrB,OAAA;UAAAY,QAAA,GAAiBQ,IAAI,EAAC,OAAE;QAAA,GAAfC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEd;AAACd,EAAA,CAzCuBD,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AAyCvC;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}