{"ast":null,"code":"var _jsxFileName = \"/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pans = {\n  rectangular: [{\n    length: 8,\n    width: 8,\n    height: 2\n  }, {\n    length: 9,\n    width: 9,\n    height: 2\n  }, {\n    length: 10,\n    width: 10,\n    height: 2\n  }, {\n    length: 11,\n    width: 7,\n    height: 2\n  }, {\n    length: 13,\n    width: 9,\n    height: 2\n  }],\n  round: [{\n    diameter: 6,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }],\n  springform: [{\n    diameter: 9,\n    height: 2.5\n  }, {\n    diameter: 10,\n    height: 2.5\n  }],\n  bundt: [{\n    diameter: 10,\n    height: 3\n  }],\n  tube: [{\n    diameter: 9,\n    height: 3\n  }],\n  loaf: [{\n    length: 8,\n    width: 4,\n    height: 3\n  }, {\n    length: 9,\n    width: 5,\n    height: 3\n  }]\n};\nfunction cubicInchesToLitres(x) {\n  return x * 0.0163871;\n}\nfunction calculateRectangleVolume({\n  length,\n  width,\n  height\n}) {\n  return cubicInchesToLitres(length * width * height);\n}\n\n// times .125 floored\n\nexport default function PanSizer() {\n  _s();\n  const [fromShape, setFromShape] = useState();\n  const [originalDimensions, setOriginalDimensions] = useState([]);\n\n  // function shapeDimensionList1() {\n  //     return (\n  //         <ul>\n  //             {pans.rectangular.map((pan, index) => (\n  //                 <li key={index}>{`${pan.length} x ${pan.width} x ${pan.height}`}</li>\n  //             ))}\n  //         </ul>\n  //     );\n  // }\n\n  function dimensionOptions(type) {\n    if (type == 'rectangular' || type == 'loaf') {\n      return pans[type].map(({\n        length,\n        width,\n        height\n      }) => ({\n        value: `${length}x${width}x${height}`,\n        label: `${length} x ${width} x ${height}`\n      }));\n    } else {\n      return pans[type].map(({\n        diameter,\n        height\n      }) => ({\n        value: `${diameter}x${height}`,\n        label: `${diameter} x ${height}`\n      }));\n    }\n  }\n  function handleShapeChange(event) {\n    const shapeType = event.target.value;\n    setFromShape(shapeType);\n    setOriginalDimensions(dimensionOptions(shapeType));\n  }\n  function handleConversion() {\n    return calculateRectangleVolume();\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Pan Sizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"basic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shape: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-from\",\n          name: \"shape-from\",\n          value: fromShape,\n          onChange: handleShapeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rectangular\",\n            children: \"Rectangular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"round\",\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"springform\",\n            children: \"Springform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"loaf\",\n            children: \"Loaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bundt\",\n            children: \"Bundt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tube\",\n            children: \"Tube\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dimensions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-original-dimensions\",\n          name: \"shape-original-dimensions\",\n          children: originalDimensions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: originalDimensions,\n        onClick: () => handleConversion(),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Equivalent To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(PanSizer, \"VW3HHONKTGscnXI3rKVId0k+Aug=\");\n_c = PanSizer;\nvar _c;\n$RefreshReg$(_c, \"PanSizer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","pans","rectangular","length","width","height","round","diameter","springform","bundt","tube","loaf","cubicInchesToLitres","x","calculateRectangleVolume","PanSizer","_s","fromShape","setFromShape","originalDimensions","setOriginalDimensions","dimensionOptions","type","map","value","label","handleShapeChange","event","shapeType","target","handleConversion","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onChange","option","index","onClick","class","_c","$RefreshReg$"],"sources":["/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst pans = {\n    rectangular: [\n        { length: 8, width: 8, height: 2 },\n        { length: 9, width: 9, height: 2 },\n        { length: 10, width: 10, height: 2 },\n        { length: 11, width: 7, height: 2 },\n        { length: 13, width: 9, height: 2 }\n    ],\n    round: [\n        { diameter: 6, height: 2 },\n        { diameter: 9, height: 2 },\n        { diameter: 9, height: 2 }\n    ],\n    springform: [\n        { diameter: 9, height: 2.5 },\n        { diameter: 10, height: 2.5 }\n    ],\n    bundt: [\n        { diameter: 10, height: 3 }\n    ],\n    tube: [\n        { diameter: 9, height: 3 }\n    ],\n    loaf: [\n        { length: 8, width: 4, height: 3 },\n        { length: 9, width: 5, height: 3 }\n    ],\n};\n\nfunction cubicInchesToLitres(x) {\n    return x * 0.0163871;\n}\n\nfunction calculateRectangleVolume({ length, width, height }) {\n    return cubicInchesToLitres(length * width * height);\n}\n\n// times .125 floored\n\nexport default function PanSizer() {\n    const [ fromShape, setFromShape ] = useState();\n    const [ originalDimensions, setOriginalDimensions ] = useState([]);\n\n    // function shapeDimensionList1() {\n    //     return (\n    //         <ul>\n    //             {pans.rectangular.map((pan, index) => (\n    //                 <li key={index}>{`${pan.length} x ${pan.width} x ${pan.height}`}</li>\n    //             ))}\n    //         </ul>\n    //     );\n    // }\n\n    function dimensionOptions(type) {\n        if (type == 'rectangular' || type == 'loaf') {\n            return pans[type].map(({ length, width, height }) => ({\n                value: `${length}x${width}x${height}`,\n                label: `${length} x ${width} x ${height}`\n            }));           \n        } else {\n            return pans[type].map(({ diameter, height }) => ({\n                value: `${diameter}x${height}`,\n                label: `${diameter} x ${height}`\n            }));  \n        }\n    }\n\n    function handleShapeChange(event) {\n        const shapeType = event.target.value;\n        setFromShape(shapeType);\n        setOriginalDimensions(dimensionOptions(shapeType));\n    }\n\n    function handleConversion() {\n        return calculateRectangleVolume();\n\n    }\n\n    return (\n        <section>\n            <h2 className=\"form-title\">Pan Sizer</h2>\n            <form className=\"basic-form\">\n                <p>\n                    <label>Shape: </label>\n                    <select id=\"shape-from\" name=\"shape-from\" value={fromShape} onChange={handleShapeChange}>\n                        <option value=\"rectangular\">Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                    </select>\n\n                    {/* <label for=\"shape-to\">To:</label>\n                    <select id=\"shape-to\" name=\"shape-to\">\n                        <option value=\"rectangular\">Square/Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                        <option value=\"all\">All</option>\n                    </select> */}\n                </p>\n\n                <p>\n                    <label>Dimensions: </label>\n                    <select id=\"shape-original-dimensions\" name=\"shape-original-dimensions\">\n                        {originalDimensions.map((option, index) => (\n                            <option key={index} value={option.value}>{option.label}</option>\n                        ))}\n                    </select>\n                </p>\n\n                <button value={originalDimensions} onClick={() => handleConversion()}>Calculate</button>\n\n                <div class=\"result\">\n                    <h3>Equivalent To:</h3>\n                    <ul>\n\n                    </ul>\n                </div>\n\n\n            </form>\n        </section>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}