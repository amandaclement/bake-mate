{"ast":null,"code":"var _jsxFileName = \"/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pans = {\n  rectangular: [{\n    length: 8,\n    width: 8,\n    height: 2\n  }, {\n    length: 9,\n    width: 9,\n    height: 2\n  }, {\n    length: 10,\n    width: 10,\n    height: 2\n  }, {\n    length: 11,\n    width: 7,\n    height: 2\n  }, {\n    length: 13,\n    width: 9,\n    height: 2\n  }],\n  round: [{\n    diameter: 6,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }],\n  springform: [{\n    diameter: 9,\n    height: 2.5\n  }, {\n    diameter: 10,\n    height: 2.5\n  }],\n  bundt: [{\n    diameter: 10,\n    height: 3\n  }],\n  tube: [{\n    diameter: 9,\n    height: 3\n  }],\n  loaf: [{\n    length: 8,\n    width: 4,\n    height: 3\n  }, {\n    length: 9,\n    width: 5,\n    height: 3\n  }]\n};\nfunction calculateRectangleVolume() {\n  return 10;\n}\n\n// times .125 floored\n\nexport default function PanSizer() {\n  _s();\n  const [fromShape, setFromShape] = useState('rectangular');\n  const [originalDimensions, setOriginalDimensions] = useState([]);\n  function shapeDimensionList1() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pans.rectangular.map((pan, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `${pan.length} x ${pan.width} x ${pan.height}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n  function dimensionOptions(type) {\n    switch (type) {\n      case 'rectangular':\n        return [{\n          value: '8x8x2',\n          label: '8 x 8 x 2'\n        }, {\n          value: '9x9x2',\n          label: '9 x 9 x 2'\n        }\n        // Add more options as needed\n        ];\n      case 'round':\n        return [{\n          value: '6x2',\n          label: '6 x 2'\n        }, {\n          value: '8x2',\n          label: '8 x 2'\n        }\n        // Add more options as needed\n        ];\n      default:\n        return [];\n    }\n  }\n  function handleShapeChange(event) {\n    setFromShape(event.target.value);\n    setOriginalDimensions(dimensionOptions(fromShape));\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Pan Sizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"basic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-from\",\n          name: \"shape-from\",\n          value: fromShape,\n          onChange: handleShapeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rectangular\",\n            children: \"Square/Rectangular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"round\",\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"springform\",\n            children: \"Springform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"loaf\",\n            children: \"Loaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bundt\",\n            children: \"Bundt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tube\",\n            children: \"Tube\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Original Dimensions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-original-dimensions\",\n          name: \"shape-original-dimensions\",\n          children: originalDimensions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(PanSizer, \"4dKtOw+6n3Drml+vYbOVeJEf8uc=\");\n_c = PanSizer;\nvar _c;\n$RefreshReg$(_c, \"PanSizer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","pans","rectangular","length","width","height","round","diameter","springform","bundt","tube","loaf","calculateRectangleVolume","PanSizer","_s","fromShape","setFromShape","originalDimensions","setOriginalDimensions","shapeDimensionList1","children","map","pan","index","fileName","_jsxFileName","lineNumber","columnNumber","dimensionOptions","type","value","label","handleShapeChange","event","target","className","id","name","onChange","option","_c","$RefreshReg$"],"sources":["/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst pans = {\n    rectangular: [\n        { length: 8, width: 8, height: 2 },\n        { length: 9, width: 9, height: 2 },\n        { length: 10, width: 10, height: 2 },\n        { length: 11, width: 7, height: 2 },\n        { length: 13, width: 9, height: 2 }\n    ],\n    round: [\n        { diameter: 6, height: 2 },\n        { diameter: 9, height: 2 },\n        { diameter: 9, height: 2 }\n    ],\n    springform: [\n        { diameter: 9, height: 2.5 },\n        { diameter: 10, height: 2.5 }\n    ],\n    bundt: [\n        { diameter: 10, height: 3 }\n    ],\n    tube: [\n        { diameter: 9, height: 3 }\n    ],\n    loaf: [\n        { length: 8, width: 4, height: 3 },\n        { length: 9, width: 5, height: 3 }\n    ],\n};\n\nfunction calculateRectangleVolume() {\n    return 10;\n}\n\n// times .125 floored\n\nexport default function PanSizer() {\n    const [ fromShape, setFromShape ] = useState('rectangular');\n    const [ originalDimensions, setOriginalDimensions ] = useState([]);\n\n    function shapeDimensionList1() {\n        return (\n            <ul>\n                {pans.rectangular.map((pan, index) => (\n                    <li key={index}>{`${pan.length} x ${pan.width} x ${pan.height}`}</li>\n                ))}\n            </ul>\n        );\n    }\n\n    function dimensionOptions(type) {\n        switch (type) {\n            case 'rectangular':\n                return [\n                    { value: '8x8x2', label: '8 x 8 x 2' },\n                    { value: '9x9x2', label: '9 x 9 x 2' },\n                    // Add more options as needed\n                ];\n            case 'round':\n                return [\n                    { value: '6x2', label: '6 x 2' },\n                    { value: '8x2', label: '8 x 2' },\n                    // Add more options as needed\n                ];\n            default:\n                return [];\n        }\n    }\n\n    function handleShapeChange(event) {\n        setFromShape(event.target.value);\n        setOriginalDimensions(dimensionOptions(fromShape));\n    }\n\n    return (\n        <section>\n            <h2 className=\"form-title\">Pan Sizer</h2>\n            <form className=\"basic-form\">\n                <p>\n                    <label>From:</label>\n                    <select id=\"shape-from\" name=\"shape-from\" value={fromShape} onChange={handleShapeChange}>\n                        <option value=\"rectangular\">Square/Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                    </select>\n\n                    {/* <label for=\"shape-to\">To:</label>\n                    <select id=\"shape-to\" name=\"shape-to\">\n                        <option value=\"rectangular\">Square/Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                        <option value=\"all\">All</option>\n                    </select> */}\n                </p>\n\n                <p>\n                    <label>Original Dimensions:</label>\n                    <select id=\"shape-original-dimensions\" name=\"shape-original-dimensions\">\n                        {originalDimensions.map((option, index) => (\n                            <option key={index} value={option.value}>{option.label}</option>\n                        ))}\n                    </select>\n                </p>\n\n\n            </form>\n        </section>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}