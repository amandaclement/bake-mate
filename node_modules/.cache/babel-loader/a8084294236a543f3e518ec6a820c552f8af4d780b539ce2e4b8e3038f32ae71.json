{"ast":null,"code":"var _jsxFileName = \"/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pans = {\n  rectangular: [{\n    length: 8,\n    width: 8,\n    height: 2\n  }, {\n    length: 9,\n    width: 9,\n    height: 2\n  }, {\n    length: 10,\n    width: 10,\n    height: 2\n  }, {\n    length: 11,\n    width: 7,\n    height: 2\n  }, {\n    length: 13,\n    width: 9,\n    height: 2\n  }],\n  round: [{\n    diameter: 6,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }, {\n    diameter: 9,\n    height: 2\n  }],\n  springform: [{\n    diameter: 9,\n    height: 2.5\n  }, {\n    diameter: 10,\n    height: 2.5\n  }],\n  bundt: [{\n    diameter: 10,\n    height: 3\n  }],\n  tube: [{\n    diameter: 9,\n    height: 3\n  }],\n  loaf: [{\n    length: 8,\n    width: 4,\n    height: 3\n  }, {\n    length: 9,\n    width: 5,\n    height: 3\n  }]\n};\nfunction calculateRectangleVolume() {\n  return 10;\n}\n\n// times .125 floored\n\nexport default function PanSizer() {\n  _s();\n  const [fromShape, setFromShape] = useState('rectangular');\n  function shapeDimensionList1() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pans.rectangular.map((pan, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `${pan.length} x ${pan.width} x ${pan.height}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n  function dimensionOptions(type) {\n    const dimensions = [];\n    switch (type) {\n      case 'rectangular':\n        return pans.rectangular.map((pan, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: `${pan.length}x${pan.width}x${pan.height}`,\n          children: `${pan.length} x ${pan.width} x ${pan.height}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this));\n    }\n  }\n  function handleShapeChange(type) {\n    setFromShape(type.target.value);\n\n    // Update default original dimension options for chosen shape\n    // var volume = 0;\n    var sizes = [];\n    switch (type) {\n      case 'rectangular':\n        const rectangularListItems = pans.rectangular.map(pan => {\n          return `<li>${pan.length} x ${pan.width} x ${pan.height}</li>`;\n        });\n        return `<ul>${rectangularListItems.join('')}</ul>`;\n    }\n\n    // switch(type) {\n    //     case 'rectangular':\n    //       return calculateRectangleVolume();\n    //     //   break;\n    //     default:\n    //       volume = 20;\n    //   }\n    //   return volume;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"form-title\",\n      children: \"Pan Sizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"basic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"shape-from\",\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-from\",\n          name: \"shape-from\",\n          value: fromShape,\n          onChange: handleShapeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rectangular\",\n            children: \"Square/Rectangular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"round\",\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"springform\",\n            children: \"Springform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"loaf\",\n            children: \"Loaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bundt\",\n            children: \"Bundt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tube\",\n            children: \"Tube\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"shape-original-dimensions\",\n          children: \"Original Dimensions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"shape-original-dimensions\",\n          name: \"shape-original-dimensions\",\n          children: dimensionOptions({\n            fromShape\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(PanSizer, \"wvQVIHLyUOY6Lyk2m6EnOl/EL5s=\");\n_c = PanSizer;\nvar _c;\n$RefreshReg$(_c, \"PanSizer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","pans","rectangular","length","width","height","round","diameter","springform","bundt","tube","loaf","calculateRectangleVolume","PanSizer","_s","fromShape","setFromShape","shapeDimensionList1","children","map","pan","index","fileName","_jsxFileName","lineNumber","columnNumber","dimensionOptions","type","dimensions","value","handleShapeChange","target","sizes","rectangularListItems","join","class","for","id","name","onChange","_c","$RefreshReg$"],"sources":["/Users/AmandaClement/Desktop/React/bake-mate/src/components/PanSizer.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst pans = {\n    rectangular: [\n        { length: 8, width: 8, height: 2 },\n        { length: 9, width: 9, height: 2 },\n        { length: 10, width: 10, height: 2 },\n        { length: 11, width: 7, height: 2 },\n        { length: 13, width: 9, height: 2 }\n    ],\n    round: [\n        { diameter: 6, height: 2 },\n        { diameter: 9, height: 2 },\n        { diameter: 9, height: 2 }\n    ],\n    springform: [\n        { diameter: 9, height: 2.5 },\n        { diameter: 10, height: 2.5 }\n    ],\n    bundt: [\n        { diameter: 10, height: 3 }\n    ],\n    tube: [\n        { diameter: 9, height: 3 }\n    ],\n    loaf: [\n        { length: 8, width: 4, height: 3 },\n        { length: 9, width: 5, height: 3 }\n    ],\n};\n\nfunction calculateRectangleVolume() {\n    return 10;\n}\n\n// times .125 floored\n\nexport default function PanSizer() {\n    const [ fromShape, setFromShape ] = useState('rectangular');\n\n    function shapeDimensionList1() {\n        return (\n            <ul>\n                {pans.rectangular.map((pan, index) => (\n                    <li key={index}>{`${pan.length} x ${pan.width} x ${pan.height}`}</li>\n                ))}\n            </ul>\n        );\n    }\n\n    function dimensionOptions(type) {\n        const dimensions = [];\n\n        switch(type) {\n            case 'rectangular':\n                return pans.rectangular.map((pan, index) => (\n                    <option key={index} value={`${pan.length}x${pan.width}x${pan.height}`}>\n                        {`${pan.length} x ${pan.width} x ${pan.height}`}\n                    </option>\n                ));\n        }\n    }\n\n    function handleShapeChange(type) {\n        setFromShape(type.target.value);\n\n        // Update default original dimension options for chosen shape\n        // var volume = 0;\n        var sizes = [];\n\n        switch(type) {\n            case 'rectangular':\n                const rectangularListItems = pans.rectangular.map((pan) => {\n                    return `<li>${pan.length} x ${pan.width} x ${pan.height}</li>`;\n                });\n                return `<ul>${rectangularListItems.join('')}</ul>`;\n        }\n\n        // switch(type) {\n        //     case 'rectangular':\n        //       return calculateRectangleVolume();\n        //     //   break;\n        //     default:\n        //       volume = 20;\n        //   }\n        //   return volume;\n\n    }\n\n    return (\n        <section>\n            <h2 class=\"form-title\">Pan Sizer</h2>\n            <form class=\"basic-form\">\n                <p>\n                    <label for=\"shape-from\">From:</label>\n                    <select id=\"shape-from\" name=\"shape-from\" value={fromShape} onChange={handleShapeChange}>\n                        <option value=\"rectangular\">Square/Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                    </select>\n\n                    {/* <label for=\"shape-to\">To:</label>\n                    <select id=\"shape-to\" name=\"shape-to\">\n                        <option value=\"rectangular\">Square/Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option>\n                        <option value=\"all\">All</option>\n                    </select> */}\n                </p>\n\n                <p>\n                    <label for=\"shape-original-dimensions\">Original Dimensions:</label>\n                    <select id=\"shape-original-dimensions\" name=\"shape-original-dimensions\">\n                        {dimensionOptions({fromShape})}\n                        {/* <option value=\"rectangular\">Square/Rectangular</option>\n                        <option value=\"round\">Round</option>\n                        <option value=\"springform\">Springform</option>\n                        <option value=\"loaf\">Loaf</option>\n                        <option value=\"bundt\">Bundt</option>\n                        <option value=\"tube\">Tube</option> */}\n                    </select>\n                </p>\n                {/* <button onClick={() => handleShapeChange('rectangular')}>Calculate</button> */}\n\n\n            </form>\n        </section>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAG;EACTC,WAAW,EAAE,CACT;IAAEC,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAClC;IAAEF,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAClC;IAAEF,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC,EACpC;IAAEF,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EACnC;IAAEF,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CACtC;EACDC,KAAK,EAAE,CACH;IAAEC,QAAQ,EAAE,CAAC;IAAEF,MAAM,EAAE;EAAE,CAAC,EAC1B;IAAEE,QAAQ,EAAE,CAAC;IAAEF,MAAM,EAAE;EAAE,CAAC,EAC1B;IAAEE,QAAQ,EAAE,CAAC;IAAEF,MAAM,EAAE;EAAE,CAAC,CAC7B;EACDG,UAAU,EAAE,CACR;IAAED,QAAQ,EAAE,CAAC;IAAEF,MAAM,EAAE;EAAI,CAAC,EAC5B;IAAEE,QAAQ,EAAE,EAAE;IAAEF,MAAM,EAAE;EAAI,CAAC,CAChC;EACDI,KAAK,EAAE,CACH;IAAEF,QAAQ,EAAE,EAAE;IAAEF,MAAM,EAAE;EAAE,CAAC,CAC9B;EACDK,IAAI,EAAE,CACF;IAAEH,QAAQ,EAAE,CAAC;IAAEF,MAAM,EAAE;EAAE,CAAC,CAC7B;EACDM,IAAI,EAAE,CACF;IAAER,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAClC;IAAEF,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC;AAE1C,CAAC;AAED,SAASO,wBAAwBA,CAAA,EAAG;EAChC,OAAO,EAAE;AACb;;AAEA;;AAEA,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAE,GAAGlB,QAAQ,CAAC,aAAa,CAAC;EAE3D,SAASmB,mBAAmBA,CAAA,EAAG;IAC3B,oBACIjB,OAAA;MAAAkB,QAAA,EACKjB,IAAI,CAACC,WAAW,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC7BrB,OAAA;QAAAkB,QAAA,EAAkB,GAAEE,GAAG,CAACjB,MAAO,MAAKiB,GAAG,CAAChB,KAAM,MAAKgB,GAAG,CAACf,MAAO;MAAC,GAAtDgB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsD,CACvE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEb;EAEA,SAASC,gBAAgBA,CAACC,IAAI,EAAE;IAC5B,MAAMC,UAAU,GAAG,EAAE;IAErB,QAAOD,IAAI;MACP,KAAK,aAAa;QACd,OAAO1B,IAAI,CAACC,WAAW,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnCrB,OAAA;UAAoB6B,KAAK,EAAG,GAAET,GAAG,CAACjB,MAAO,IAAGiB,GAAG,CAAChB,KAAM,IAAGgB,GAAG,CAACf,MAAO,EAAE;UAAAa,QAAA,EAChE,GAAEE,GAAG,CAACjB,MAAO,MAAKiB,GAAG,CAAChB,KAAM,MAAKgB,GAAG,CAACf,MAAO;QAAC,GADtCgB,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX,CAAC;IACV;EACJ;EAEA,SAASK,iBAAiBA,CAACH,IAAI,EAAE;IAC7BX,YAAY,CAACW,IAAI,CAACI,MAAM,CAACF,KAAK,CAAC;;IAE/B;IACA;IACA,IAAIG,KAAK,GAAG,EAAE;IAEd,QAAOL,IAAI;MACP,KAAK,aAAa;QACd,MAAMM,oBAAoB,GAAGhC,IAAI,CAACC,WAAW,CAACiB,GAAG,CAAEC,GAAG,IAAK;UACvD,OAAQ,OAAMA,GAAG,CAACjB,MAAO,MAAKiB,GAAG,CAAChB,KAAM,MAAKgB,GAAG,CAACf,MAAO,OAAM;QAClE,CAAC,CAAC;QACF,OAAQ,OAAM4B,oBAAoB,CAACC,IAAI,CAAC,EAAE,CAAE,OAAM;IAC1D;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ;EAEA,oBACIlC,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAImC,KAAK,EAAC,YAAY;MAAAjB,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCzB,OAAA;MAAMmC,KAAK,EAAC,YAAY;MAAAjB,QAAA,gBACpBlB,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UAAOoC,GAAG,EAAC,YAAY;UAAAlB,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrCzB,OAAA;UAAQqC,EAAE,EAAC,YAAY;UAACC,IAAI,EAAC,YAAY;UAACT,KAAK,EAAEd,SAAU;UAACwB,QAAQ,EAAET,iBAAkB;UAAAZ,QAAA,gBACpFlB,OAAA;YAAQ6B,KAAK,EAAC,aAAa;YAAAX,QAAA,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvDzB,OAAA;YAAQ6B,KAAK,EAAC,OAAO;YAAAX,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpCzB,OAAA;YAAQ6B,KAAK,EAAC,YAAY;YAAAX,QAAA,EAAC;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9CzB,OAAA;YAAQ6B,KAAK,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCzB,OAAA;YAAQ6B,KAAK,EAAC,OAAO;YAAAX,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpCzB,OAAA;YAAQ6B,KAAK,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CAAC,eAEJzB,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UAAOoC,GAAG,EAAC,2BAA2B;UAAAlB,QAAA,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnEzB,OAAA;UAAQqC,EAAE,EAAC,2BAA2B;UAACC,IAAI,EAAC,2BAA2B;UAAApB,QAAA,EAClEQ,gBAAgB,CAAC;YAACX;UAAS,CAAC;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAO1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB;AAACX,EAAA,CAjGuBD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}